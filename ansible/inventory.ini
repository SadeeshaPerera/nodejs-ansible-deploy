# Production Environment
[production]
# prod1 ansible_host=192.168.1.10 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/prod_key
# prod2 ansible_host=192.168.1.11 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/prod_key

# Staging Environment
[staging]
# staging1 ansible_host=192.168.1.20 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/staging_key
# staging2 ansible_host=192.168.1.21 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/staging_key

# Development Environment
[development]
# dev1 ansible_host=192.168.1.30 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/dev_key

# Load Balancers
[load_balancers]
# lb1 ansible_host=192.168.1.5 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/lb_key

# Database Servers
[database]
# db1 ansible_host=192.168.1.40 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/db_key

# Cache Servers
[cache]
# redis1 ansible_host=192.168.1.50 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/cache_key

# Monitoring Servers
[monitoring]
# monitor1 ansible_host=192.168.1.60 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/monitor_key

# Local testing (requires SSH server on localhost)
[local]
localhost ansible_connection=local

# Group webservers (contains all app servers)
[webservers:children]
production
staging
development
local

# Group all servers
[all_servers:children]
webservers
load_balancers
database
cache
monitoring

# Production specific variables
[production:vars]
app_environment=production
nodejs_version=18
ssl_enabled=true
enable_ssl=true
use_pm2=true
install_mongodb=true
install_redis=true
backup_before_deploy=true
run_tests=true
log_level=info
cors_origin=https://yourdomain.com
app_domain=yourdomain.com
jwt_secret=your-super-secure-production-jwt-secret
api_key=your-production-api-key
webhook_url=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
notification_email=admin@yourdomain.com
email_enabled=true
email_host=smtp.yourdomain.com
email_port=587

# Staging specific variables
[staging:vars]
app_environment=staging
nodejs_version=18
ssl_enabled=false
use_pm2=false
install_mongodb=false
install_redis=false
backup_before_deploy=true
run_tests=true
log_level=debug
cors_origin=http://staging.yourdomain.com
app_domain=staging.yourdomain.com
jwt_secret=your-staging-jwt-secret
api_key=your-staging-api-key

# Development specific variables
[development:vars]
app_environment=development
nodejs_version=18
ssl_enabled=false
use_pm2=false
install_mongodb=false
install_redis=false
backup_before_deploy=false
run_tests=false
log_level=debug
cors_origin=http://dev.yourdomain.com
app_domain=dev.yourdomain.com
jwt_secret=your-development-jwt-secret
api_key=your-development-api-key

# Local testing variables
[local:vars]
app_environment=development
nodejs_version=18
ssl_enabled=false
use_pm2=false
install_mongodb=false
install_redis=false
backup_before_deploy=false
run_tests=false
log_level=debug
cors_origin=http://localhost:3000
app_domain=localhost
jwt_secret=local-development-secret
api_key=local-api-key

# Common variables for all webservers
[webservers:vars]
ansible_user=ubuntu
ansible_ssh_private_key_file=~/.ssh/id_rsa
nodejs_app_name=nodejs-ansible-deploy
nodejs_app_port=3000
nodejs_app_dir=/opt/nodejs-app
app_user=nodeapp
app_group=nodeapp
systemd_service_name=nodejs-app
backup_dir=/opt/backups
app_version=1.0.0
bcrypt_rounds=12
pm2_instances=max
mongodb_version=6.0
redis_version=7.0
nginx_user=www-data
nginx_group=www-data

# Load balancer variables
[load_balancers:vars]
lb_method=least_conn
health_check_interval=30
health_check_timeout=5

# Database variables
[database:vars]
mongodb_port=27017
mongodb_bind_ip=127.0.0.1
mongodb_auth_enabled=true

# Cache variables  
[cache:vars]
redis_port=6379
redis_bind_ip=127.0.0.1
redis_auth_enabled=true

# Monitoring variables
[monitoring:vars]
grafana_port=3000
prometheus_port=9090
alertmanager_port=9093
